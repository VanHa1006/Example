@page
@model MilkShop.Pages.OrderPages.IndexModel
@{
    ViewData["Title"] = "Index";
}
<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Checkout</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Checkout</li>
    </ol>
</div>
<!-- Single Page Header End -->

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Order List</h1>
    <a asp-page="Create" class="btn btn-primary">
        <i class="bi bi-plus-circle me-1"></i>Create New
    </a>
</div>

<form method="get">
    <div class="input-group">
        <input class="form-control" asp-for="SearchTerm">
        <div class="input-group-append">
            <button class="btn btn-primary" type="submit">Search</button>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered table-hover">
        <thead class="bg-primary text-white">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].OrderDate)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].OrderStatus)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].OrderTotalAmount)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].PaymentMethodId)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].PaymentStatus)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].Status)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].CreatedDate)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].ShippingAddress)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].BillingAddress)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].ShippingMethod)</th>
                <th>@Html.DisplayNameFor(model => model.Order.Items[0].User)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Order.Items)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                    <td>
                        @switch (item.OrderStatus)
                        {
                            case "Pending":
                                <span class="badge bg-warning">@Html.DisplayFor(modelItem => item.OrderStatus)</span>
                                break;
                            case "Processed":
                                <span class="badge bg-info">@Html.DisplayFor(modelItem => item.OrderStatus)</span>
                                break;
                            case "Canceled":
                                <span class="badge bg-danger">@Html.DisplayFor(modelItem => item.OrderStatus)</span>
                                break;
                            default:
                                @Html.DisplayFor(modelItem => item.OrderStatus)
                                break;
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.OrderTotalAmount)</td>
                    <td>@Html.DisplayFor(modelItem => item.PaymentMethodId)</td>
                    <td>
                        @switch (item.PaymentStatus)
                        {
                            case "Paid":
                                <span class="badge bg-success">@Html.DisplayFor(modelItem => item.PaymentStatus)</span>
                                break;
                            case "Unpaid":
                                <span class="badge bg-danger">@Html.DisplayFor(modelItem => item.PaymentStatus)</span>
                                break;
                            default:
                                @Html.DisplayFor(modelItem => item.PaymentStatus)
                                break;
                        }
                    </td>
                    <td>
                        @switch (item.Status)
                        {
                            case "New":
                                <span class="badge bg-warning">@Html.DisplayFor(modelItem => item.Status)</span>
                                break;
                            case "Shipped":
                                <span class="badge bg-info">@Html.DisplayFor(modelItem => item.Status)</span>
                                break;
                            case "Canceled":
                                <span class="badge bg-danger">@Html.DisplayFor(modelItem => item.Status)</span>
                                break;
                            default:
                                @Html.DisplayFor(modelItem => item.Status)
                                break;
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.ShippingAddress)</td>
                    <td>@Html.DisplayFor(modelItem => item.BillingAddress)</td>
                    <td>@Html.DisplayFor(modelItem => item.ShippingMethod)</td>
                    <td>@Html.DisplayFor(modelItem => item.User.UserName)</td>
                    <td class="text-center">
                        <div class="d-flex justify-content-center">
                            <a asp-page="./Edit" asp-route-id="@item.OrderId" class="btn btn-sm btn-outline-primary mx-1" title="Edit">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a asp-page="./Details" asp-route-id="@item.OrderId" class="btn btn-sm btn-outline-info mx-1" title="Details">
                                <i class="bi bi-info-circle"></i>
                            </a>
                            <a asp-page="./Delete" asp-route-id="@item.OrderId" class="btn btn-sm btn-outline-danger mx-1" title="Delete">
                                <i class="bi bi-trash"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <a asp-page="/OrderPages/Index" asp-route-SearchTerm="@Model.SearchTerm" asp-route-PageIndex="@(Model.PageIndex - 1)"
           class="@(Model.PageIndex == 1 ? "disabled" : "") btn btn-primary">Previous</a>

        <span>Page @Model.Order.Page of @Model.Order.TotalPages </span>

        <a asp-page="/OrderPages/Index" asp-route-SearchTerm="@Model.SearchTerm" asp-route-PageIndex="@(Model.PageIndex + 1)"
           class="@(Model.PageIndex == Model.Order.TotalPages ? "disabled" : "") btn btn-primary">Next</a>
    </div>
</div>